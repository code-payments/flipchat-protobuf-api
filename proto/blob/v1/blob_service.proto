syntax = "proto3";

package flipchat.blob.v1;

option go_package = "github.com/code-payments/flipchat-protobuf-api/generated/go/blob/v1;blobpb";
option java_package = "com.codeinc.flipchat.gen.blob.v1";
option objc_class_prefix = "FCPBBlobV1";

import "common/v1/common.proto";
import "blob/v1/model.proto";

service BlobService {
  // Request for a smaller/single-shot upload
  rpc Upload (UploadRequest) returns (UploadResponse);

  // Placeholder for future work
  //  - helps with large files that exceed gRPC message limits
  //  - avoids high memory usage by streaming in chunks
  //  - can allow better upload progress tracking
  //  - can *maybe* support live audio/video
  rpc UploadChunked (stream UploadChunk) returns (UploadChunkedResponse);

  // Get the metadata for a previously uploaded blob
  rpc GetInfo (GetInfoRequest) returns (GetInfoResponse);
}

// Request for a smaller/single-shot upload
message UploadRequest {
  common.v1.UserId owner_id = 1;
  BlobType blob_type = 2;
  bytes raw_data = 3;
}

// Single-shot upload response
message UploadResponse {
  Blob blob = 1;
}

// Client-streaming chunk for large uploads
message UploadChunk {
  common.v1.UserId owner_id = 1;
  BlobType blob_type = 2;

  bytes data = 3;
}

// Chunked upload final response
message UploadChunkedResponse {
  Blob blob = 1;
}

// Retrieve existing blob info
message GetInfoRequest {
  common.v1.BlobId blob_id = 1;
}

message GetInfoResponse {
  Blob blob = 1;
}
