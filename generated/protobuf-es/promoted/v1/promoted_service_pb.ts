// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file promoted/v1/promoted_service.proto (package flipchat.promoted.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { ChatId } from "../../common/v1/common_pb";

/**
 * @generated from message flipchat.promoted.v1.GetPromotedChatsRequest
 */
export class GetPromotedChatsRequest extends Message<GetPromotedChatsRequest> {
  /**
   * @generated from field: string topic = 1;
   */
  topic = "";

  constructor(data?: PartialMessage<GetPromotedChatsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "flipchat.promoted.v1.GetPromotedChatsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "topic", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPromotedChatsRequest {
    return new GetPromotedChatsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPromotedChatsRequest {
    return new GetPromotedChatsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPromotedChatsRequest {
    return new GetPromotedChatsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetPromotedChatsRequest | PlainMessage<GetPromotedChatsRequest> | undefined, b: GetPromotedChatsRequest | PlainMessage<GetPromotedChatsRequest> | undefined): boolean {
    return proto3.util.equals(GetPromotedChatsRequest, a, b);
  }
}

/**
 * @generated from message flipchat.promoted.v1.GetPromotedChatsResponse
 */
export class GetPromotedChatsResponse extends Message<GetPromotedChatsResponse> {
  /**
   * @generated from field: flipchat.promoted.v1.GetPromotedChatsResponse.Result result = 1;
   */
  result = GetPromotedChatsResponse_Result.OK;

  /**
   * @generated from field: repeated flipchat.common.v1.ChatId chats = 2;
   */
  chats: ChatId[] = [];

  constructor(data?: PartialMessage<GetPromotedChatsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "flipchat.promoted.v1.GetPromotedChatsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "result", kind: "enum", T: proto3.getEnumType(GetPromotedChatsResponse_Result) },
    { no: 2, name: "chats", kind: "message", T: ChatId, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPromotedChatsResponse {
    return new GetPromotedChatsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPromotedChatsResponse {
    return new GetPromotedChatsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPromotedChatsResponse {
    return new GetPromotedChatsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetPromotedChatsResponse | PlainMessage<GetPromotedChatsResponse> | undefined, b: GetPromotedChatsResponse | PlainMessage<GetPromotedChatsResponse> | undefined): boolean {
    return proto3.util.equals(GetPromotedChatsResponse, a, b);
  }
}

/**
 * @generated from enum flipchat.promoted.v1.GetPromotedChatsResponse.Result
 */
export enum GetPromotedChatsResponse_Result {
  /**
   * @generated from enum value: OK = 0;
   */
  OK = 0,

  /**
   * @generated from enum value: DENIED = 1;
   */
  DENIED = 1,

  /**
   * @generated from enum value: INVALID_REQUEST = 2;
   */
  INVALID_REQUEST = 2,

  /**
   * @generated from enum value: UNKNOWN_TOPIC = 3;
   */
  UNKNOWN_TOPIC = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(GetPromotedChatsResponse_Result)
proto3.util.setEnumType(GetPromotedChatsResponse_Result, "flipchat.promoted.v1.GetPromotedChatsResponse.Result", [
  { no: 0, name: "OK" },
  { no: 1, name: "DENIED" },
  { no: 2, name: "INVALID_REQUEST" },
  { no: 3, name: "UNKNOWN_TOPIC" },
]);

