// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.21.12
// source: activity/v1/model.proto

package activitypb

import (
	v1 "github.com/code-payments/flipchat-protobuf-api/generated/go/common/v1"
	v11 "github.com/code-payments/flipchat-protobuf-api/generated/go/messaging/v1"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ActivityFeedType enables multiple activity feeds, where notifications may be
// split across different parts of the app
type ActivityFeedType int32

const (
	ActivityFeedType_UNKNOWN             ActivityFeedType = 0
	ActivityFeedType_TRANSACTION_HISTORY ActivityFeedType = 1 // Activity feed displayed under the Balance tab
)

// Enum value maps for ActivityFeedType.
var (
	ActivityFeedType_name = map[int32]string{
		0: "UNKNOWN",
		1: "TRANSACTION_HISTORY",
	}
	ActivityFeedType_value = map[string]int32{
		"UNKNOWN":             0,
		"TRANSACTION_HISTORY": 1,
	}
)

func (x ActivityFeedType) Enum() *ActivityFeedType {
	p := new(ActivityFeedType)
	*p = x
	return p
}

func (x ActivityFeedType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActivityFeedType) Descriptor() protoreflect.EnumDescriptor {
	return file_activity_v1_model_proto_enumTypes[0].Descriptor()
}

func (ActivityFeedType) Type() protoreflect.EnumType {
	return &file_activity_v1_model_proto_enumTypes[0]
}

func (x ActivityFeedType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActivityFeedType.Descriptor instead.
func (ActivityFeedType) EnumDescriptor() ([]byte, []int) {
	return file_activity_v1_model_proto_rawDescGZIP(), []int{0}
}

// The ID of the notification, which is guaranteed to be consistent for grouped
// events. Updates to a notification with the same ID should result in re-ordering
// within the activity feed using the latest content.
type NotificationId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *NotificationId) Reset() {
	*x = NotificationId{}
	mi := &file_activity_v1_model_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotificationId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationId) ProtoMessage() {}

func (x *NotificationId) ProtoReflect() protoreflect.Message {
	mi := &file_activity_v1_model_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationId.ProtoReflect.Descriptor instead.
func (*NotificationId) Descriptor() ([]byte, []int) {
	return file_activity_v1_model_proto_rawDescGZIP(), []int{0}
}

func (x *NotificationId) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// Notification is a message that is displayed in an activity feed
type Notification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of this notification
	Id *NotificationId `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The localized title text for the notification
	LocalizedText string `protobuf:"bytes,2,opt,name=localized_text,json=localizedText,proto3" json:"localized_text,omitempty"`
	// The timestamp of this notification
	Ts *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=ts,proto3" json:"ts,omitempty"`
	// Additional metadata for this notification specific to the notification
	//
	// Types that are assignable to AdditionalMetadata:
	//
	//	*Notification_WelcomeBonus
	//	*Notification_WeeklyBonus
	//	*Notification_CreateGroup
	//	*Notification_SendListenerMessage
	//	*Notification_SendTip
	//	*Notification_ReceivedTip
	//	*Notification_PromotedToSpeaker
	AdditionalMetadata isNotification_AdditionalMetadata `protobuf_oneof:"additional_metadata"`
}

func (x *Notification) Reset() {
	*x = Notification{}
	mi := &file_activity_v1_model_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification) ProtoMessage() {}

func (x *Notification) ProtoReflect() protoreflect.Message {
	mi := &file_activity_v1_model_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification.ProtoReflect.Descriptor instead.
func (*Notification) Descriptor() ([]byte, []int) {
	return file_activity_v1_model_proto_rawDescGZIP(), []int{1}
}

func (x *Notification) GetId() *NotificationId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Notification) GetLocalizedText() string {
	if x != nil {
		return x.LocalizedText
	}
	return ""
}

func (x *Notification) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (m *Notification) GetAdditionalMetadata() isNotification_AdditionalMetadata {
	if m != nil {
		return m.AdditionalMetadata
	}
	return nil
}

func (x *Notification) GetWelcomeBonus() *WelcomeBonusNotificationMetadata {
	if x, ok := x.GetAdditionalMetadata().(*Notification_WelcomeBonus); ok {
		return x.WelcomeBonus
	}
	return nil
}

func (x *Notification) GetWeeklyBonus() *WeeklyBonusNotificationMetadata {
	if x, ok := x.GetAdditionalMetadata().(*Notification_WeeklyBonus); ok {
		return x.WeeklyBonus
	}
	return nil
}

func (x *Notification) GetCreateGroup() *CreateGroupNotificationMetadata {
	if x, ok := x.GetAdditionalMetadata().(*Notification_CreateGroup); ok {
		return x.CreateGroup
	}
	return nil
}

func (x *Notification) GetSendListenerMessage() *SendListenerMessageNotificationMetadata {
	if x, ok := x.GetAdditionalMetadata().(*Notification_SendListenerMessage); ok {
		return x.SendListenerMessage
	}
	return nil
}

func (x *Notification) GetSendTip() *SendTipNotificationMetadata {
	if x, ok := x.GetAdditionalMetadata().(*Notification_SendTip); ok {
		return x.SendTip
	}
	return nil
}

func (x *Notification) GetReceivedTip() *ReceivedTipNotificationMetadata {
	if x, ok := x.GetAdditionalMetadata().(*Notification_ReceivedTip); ok {
		return x.ReceivedTip
	}
	return nil
}

func (x *Notification) GetPromotedToSpeaker() *PromotedToSpeakerNotificationMetadata {
	if x, ok := x.GetAdditionalMetadata().(*Notification_PromotedToSpeaker); ok {
		return x.PromotedToSpeaker
	}
	return nil
}

type isNotification_AdditionalMetadata interface {
	isNotification_AdditionalMetadata()
}

type Notification_WelcomeBonus struct {
	WelcomeBonus *WelcomeBonusNotificationMetadata `protobuf:"bytes,4,opt,name=welcome_bonus,json=welcomeBonus,proto3,oneof"`
}

type Notification_WeeklyBonus struct {
	WeeklyBonus *WeeklyBonusNotificationMetadata `protobuf:"bytes,5,opt,name=weekly_bonus,json=weeklyBonus,proto3,oneof"`
}

type Notification_CreateGroup struct {
	CreateGroup *CreateGroupNotificationMetadata `protobuf:"bytes,6,opt,name=create_group,json=createGroup,proto3,oneof"`
}

type Notification_SendListenerMessage struct {
	SendListenerMessage *SendListenerMessageNotificationMetadata `protobuf:"bytes,7,opt,name=send_listener_message,json=sendListenerMessage,proto3,oneof"`
}

type Notification_SendTip struct {
	SendTip *SendTipNotificationMetadata `protobuf:"bytes,8,opt,name=send_tip,json=sendTip,proto3,oneof"`
}

type Notification_ReceivedTip struct {
	ReceivedTip *ReceivedTipNotificationMetadata `protobuf:"bytes,9,opt,name=received_tip,json=receivedTip,proto3,oneof"`
}

type Notification_PromotedToSpeaker struct {
	PromotedToSpeaker *PromotedToSpeakerNotificationMetadata `protobuf:"bytes,10,opt,name=promoted_to_speaker,json=promotedToSpeaker,proto3,oneof"`
}

func (*Notification_WelcomeBonus) isNotification_AdditionalMetadata() {}

func (*Notification_WeeklyBonus) isNotification_AdditionalMetadata() {}

func (*Notification_CreateGroup) isNotification_AdditionalMetadata() {}

func (*Notification_SendListenerMessage) isNotification_AdditionalMetadata() {}

func (*Notification_SendTip) isNotification_AdditionalMetadata() {}

func (*Notification_ReceivedTip) isNotification_AdditionalMetadata() {}

func (*Notification_PromotedToSpeaker) isNotification_AdditionalMetadata() {}

type WelcomeBonusNotificationMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuarksReceived uint64 `protobuf:"varint,1,opt,name=quarks_received,json=quarksReceived,proto3" json:"quarks_received,omitempty"`
}

func (x *WelcomeBonusNotificationMetadata) Reset() {
	*x = WelcomeBonusNotificationMetadata{}
	mi := &file_activity_v1_model_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WelcomeBonusNotificationMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WelcomeBonusNotificationMetadata) ProtoMessage() {}

func (x *WelcomeBonusNotificationMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_activity_v1_model_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WelcomeBonusNotificationMetadata.ProtoReflect.Descriptor instead.
func (*WelcomeBonusNotificationMetadata) Descriptor() ([]byte, []int) {
	return file_activity_v1_model_proto_rawDescGZIP(), []int{2}
}

func (x *WelcomeBonusNotificationMetadata) GetQuarksReceived() uint64 {
	if x != nil {
		return x.QuarksReceived
	}
	return 0
}

type WeeklyBonusNotificationMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuarksReceived uint64 `protobuf:"varint,1,opt,name=quarks_received,json=quarksReceived,proto3" json:"quarks_received,omitempty"`
}

func (x *WeeklyBonusNotificationMetadata) Reset() {
	*x = WeeklyBonusNotificationMetadata{}
	mi := &file_activity_v1_model_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WeeklyBonusNotificationMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeeklyBonusNotificationMetadata) ProtoMessage() {}

func (x *WeeklyBonusNotificationMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_activity_v1_model_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeeklyBonusNotificationMetadata.ProtoReflect.Descriptor instead.
func (*WeeklyBonusNotificationMetadata) Descriptor() ([]byte, []int) {
	return file_activity_v1_model_proto_rawDescGZIP(), []int{3}
}

func (x *WeeklyBonusNotificationMetadata) GetQuarksReceived() uint64 {
	if x != nil {
		return x.QuarksReceived
	}
	return 0
}

type CreateGroupNotificationMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatId      *v1.ChatId `protobuf:"bytes,1,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	QuarksSpent uint64     `protobuf:"varint,2,opt,name=quarks_spent,json=quarksSpent,proto3" json:"quarks_spent,omitempty"`
}

func (x *CreateGroupNotificationMetadata) Reset() {
	*x = CreateGroupNotificationMetadata{}
	mi := &file_activity_v1_model_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGroupNotificationMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupNotificationMetadata) ProtoMessage() {}

func (x *CreateGroupNotificationMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_activity_v1_model_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupNotificationMetadata.ProtoReflect.Descriptor instead.
func (*CreateGroupNotificationMetadata) Descriptor() ([]byte, []int) {
	return file_activity_v1_model_proto_rawDescGZIP(), []int{4}
}

func (x *CreateGroupNotificationMetadata) GetChatId() *v1.ChatId {
	if x != nil {
		return x.ChatId
	}
	return nil
}

func (x *CreateGroupNotificationMetadata) GetQuarksSpent() uint64 {
	if x != nil {
		return x.QuarksSpent
	}
	return 0
}

type SendListenerMessageNotificationMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatId      *v1.ChatId     `protobuf:"bytes,1,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	MessageId   *v11.MessageId `protobuf:"bytes,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	QuarksSpent uint64         `protobuf:"varint,3,opt,name=quarks_spent,json=quarksSpent,proto3" json:"quarks_spent,omitempty"`
}

func (x *SendListenerMessageNotificationMetadata) Reset() {
	*x = SendListenerMessageNotificationMetadata{}
	mi := &file_activity_v1_model_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendListenerMessageNotificationMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendListenerMessageNotificationMetadata) ProtoMessage() {}

func (x *SendListenerMessageNotificationMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_activity_v1_model_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendListenerMessageNotificationMetadata.ProtoReflect.Descriptor instead.
func (*SendListenerMessageNotificationMetadata) Descriptor() ([]byte, []int) {
	return file_activity_v1_model_proto_rawDescGZIP(), []int{5}
}

func (x *SendListenerMessageNotificationMetadata) GetChatId() *v1.ChatId {
	if x != nil {
		return x.ChatId
	}
	return nil
}

func (x *SendListenerMessageNotificationMetadata) GetMessageId() *v11.MessageId {
	if x != nil {
		return x.MessageId
	}
	return nil
}

func (x *SendListenerMessageNotificationMetadata) GetQuarksSpent() uint64 {
	if x != nil {
		return x.QuarksSpent
	}
	return 0
}

type SendTipNotificationMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatId          *v1.ChatId     `protobuf:"bytes,1,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	MessageId       *v11.MessageId `protobuf:"bytes,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	TotalQuarksSent uint64         `protobuf:"varint,3,opt,name=total_quarks_sent,json=totalQuarksSent,proto3" json:"total_quarks_sent,omitempty"`
}

func (x *SendTipNotificationMetadata) Reset() {
	*x = SendTipNotificationMetadata{}
	mi := &file_activity_v1_model_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendTipNotificationMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendTipNotificationMetadata) ProtoMessage() {}

func (x *SendTipNotificationMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_activity_v1_model_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendTipNotificationMetadata.ProtoReflect.Descriptor instead.
func (*SendTipNotificationMetadata) Descriptor() ([]byte, []int) {
	return file_activity_v1_model_proto_rawDescGZIP(), []int{6}
}

func (x *SendTipNotificationMetadata) GetChatId() *v1.ChatId {
	if x != nil {
		return x.ChatId
	}
	return nil
}

func (x *SendTipNotificationMetadata) GetMessageId() *v11.MessageId {
	if x != nil {
		return x.MessageId
	}
	return nil
}

func (x *SendTipNotificationMetadata) GetTotalQuarksSent() uint64 {
	if x != nil {
		return x.TotalQuarksSent
	}
	return 0
}

type ReceivedTipNotificationMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatId              *v1.ChatId     `protobuf:"bytes,1,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	MessageId           *v11.MessageId `protobuf:"bytes,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	TotalQuarksReceived uint64         `protobuf:"varint,3,opt,name=total_quarks_received,json=totalQuarksReceived,proto3" json:"total_quarks_received,omitempty"`
}

func (x *ReceivedTipNotificationMetadata) Reset() {
	*x = ReceivedTipNotificationMetadata{}
	mi := &file_activity_v1_model_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReceivedTipNotificationMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceivedTipNotificationMetadata) ProtoMessage() {}

func (x *ReceivedTipNotificationMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_activity_v1_model_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceivedTipNotificationMetadata.ProtoReflect.Descriptor instead.
func (*ReceivedTipNotificationMetadata) Descriptor() ([]byte, []int) {
	return file_activity_v1_model_proto_rawDescGZIP(), []int{7}
}

func (x *ReceivedTipNotificationMetadata) GetChatId() *v1.ChatId {
	if x != nil {
		return x.ChatId
	}
	return nil
}

func (x *ReceivedTipNotificationMetadata) GetMessageId() *v11.MessageId {
	if x != nil {
		return x.MessageId
	}
	return nil
}

func (x *ReceivedTipNotificationMetadata) GetTotalQuarksReceived() uint64 {
	if x != nil {
		return x.TotalQuarksReceived
	}
	return 0
}

type PromotedToSpeakerNotificationMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatId    *v1.ChatId `protobuf:"bytes,1,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	PromtedBy *v1.UserId `protobuf:"bytes,2,opt,name=promted_by,json=promtedBy,proto3" json:"promted_by,omitempty"`
}

func (x *PromotedToSpeakerNotificationMetadata) Reset() {
	*x = PromotedToSpeakerNotificationMetadata{}
	mi := &file_activity_v1_model_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PromotedToSpeakerNotificationMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromotedToSpeakerNotificationMetadata) ProtoMessage() {}

func (x *PromotedToSpeakerNotificationMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_activity_v1_model_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromotedToSpeakerNotificationMetadata.ProtoReflect.Descriptor instead.
func (*PromotedToSpeakerNotificationMetadata) Descriptor() ([]byte, []int) {
	return file_activity_v1_model_proto_rawDescGZIP(), []int{8}
}

func (x *PromotedToSpeakerNotificationMetadata) GetChatId() *v1.ChatId {
	if x != nil {
		return x.ChatId
	}
	return nil
}

func (x *PromotedToSpeakerNotificationMetadata) GetPromtedBy() *v1.UserId {
	if x != nil {
		return x.PromtedBy
	}
	return nil
}

var File_activity_v1_model_proto protoreflect.FileDescriptor

var file_activity_v1_model_proto_rawDesc = []byte{
	0x0a, 0x17, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x66, 0x6c, 0x69, 0x70, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x1a,
	0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x31, 0x0a, 0x0e, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x09, 0xfa, 0x42,
	0x06, 0x7a, 0x04, 0x10, 0x20, 0x18, 0x20, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xf5,
	0x06, 0x0a, 0x0c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x3e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x66, 0x6c,
	0x69, 0x70, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x31, 0x0a, 0x0e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01,
	0x18, 0x80, 0x02, 0x52, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x54, 0x65,
	0x78, 0x74, 0x12, 0x34, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0xfa, 0x42, 0x05, 0xb2,
	0x01, 0x02, 0x08, 0x01, 0x52, 0x02, 0x74, 0x73, 0x12, 0x5d, 0x0a, 0x0d, 0x77, 0x65, 0x6c, 0x63,
	0x6f, 0x6d, 0x65, 0x5f, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x36, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x6c, 0x63, 0x6f, 0x6d, 0x65, 0x42, 0x6f,
	0x6e, 0x75, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0c, 0x77, 0x65, 0x6c, 0x63, 0x6f,
	0x6d, 0x65, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x5a, 0x0a, 0x0c, 0x77, 0x65, 0x65, 0x6b, 0x6c,
	0x79, 0x5f, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e,
	0x66, 0x6c, 0x69, 0x70, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x42, 0x6f, 0x6e, 0x75, 0x73,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0b, 0x77, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x42, 0x6f,
	0x6e, 0x75, 0x73, 0x12, 0x5a, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x66, 0x6c, 0x69, 0x70,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x48, 0x00, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x73, 0x0a, 0x15, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d,
	0x2e, 0x66, 0x6c, 0x69, 0x70, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52,
	0x13, 0x73, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x4e, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x70,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x07, 0x73, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x70, 0x12, 0x5a, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64,
	0x5f, 0x74, 0x69, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x66, 0x6c, 0x69,
	0x70, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x54, 0x69, 0x70, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x48, 0x00, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x54, 0x69, 0x70,
	0x12, 0x6d, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x5f,
	0x73, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e,
	0x66, 0x6c, 0x69, 0x70, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x64, 0x54, 0x6f, 0x53,
	0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x11, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x64, 0x54, 0x6f, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x42,
	0x15, 0x0a, 0x13, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4b, 0x0a, 0x20, 0x57, 0x65, 0x6c, 0x63, 0x6f, 0x6d,
	0x65, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x0f, 0x71, 0x75,
	0x61, 0x72, 0x6b, 0x73, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0e, 0x71, 0x75, 0x61, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x64, 0x22, 0x4a, 0x0a, 0x1f, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x42, 0x6f, 0x6e,
	0x75, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x0f, 0x71, 0x75, 0x61, 0x72, 0x6b, 0x73,
	0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0e, 0x71, 0x75, 0x61, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x22,
	0x83, 0x01, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x3d, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x49, 0x64,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0xb2, 0x01, 0x02, 0x08, 0x01, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x71, 0x75, 0x61, 0x72, 0x6b, 0x73, 0x5f, 0x73, 0x70, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x71, 0x75, 0x61, 0x72, 0x6b, 0x73,
	0x53, 0x70, 0x65, 0x6e, 0x74, 0x22, 0xd6, 0x01, 0x0a, 0x27, 0x53, 0x65, 0x6e, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x3d, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x49, 0x64, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0xb2, 0x01, 0x02, 0x08, 0x01, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64,
	0x12, 0x49, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x42, 0x08, 0xfa, 0x42, 0x05, 0xb2, 0x01, 0x02, 0x08, 0x01,
	0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x71,
	0x75, 0x61, 0x72, 0x6b, 0x73, 0x5f, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x71, 0x75, 0x61, 0x72, 0x6b, 0x73, 0x53, 0x70, 0x65, 0x6e, 0x74, 0x22, 0xd3,
	0x01, 0x0a, 0x1b, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3d,
	0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x49, 0x64, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0xb2, 0x01, 0x02, 0x08, 0x01, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x49, 0x0a,
	0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x42, 0x08, 0xfa, 0x42, 0x05, 0xb2, 0x01, 0x02, 0x08, 0x01, 0x52, 0x09, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x71, 0x75, 0x61, 0x72, 0x6b, 0x73, 0x5f, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x51, 0x75, 0x61, 0x72, 0x6b, 0x73,
	0x53, 0x65, 0x6e, 0x74, 0x22, 0xdf, 0x01, 0x0a, 0x1f, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x64, 0x54, 0x69, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3d, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x6c, 0x69, 0x70,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x68, 0x61, 0x74, 0x49, 0x64, 0x42, 0x08, 0xfa, 0x42, 0x05, 0xb2, 0x01, 0x02, 0x08, 0x01, 0x52,
	0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x49, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x6c,
	0x69, 0x70, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0xb2, 0x01, 0x02, 0x08, 0x01, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x71, 0x75, 0x61, 0x72,
	0x6b, 0x73, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x51, 0x75, 0x61, 0x72, 0x6b, 0x73, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x22, 0xab, 0x01, 0x0a, 0x25, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x65, 0x64, 0x54, 0x6f, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x3d, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x49, 0x64, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0xb2, 0x01, 0x02, 0x08, 0x01, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12,
	0x43, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6d, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0xb2, 0x01, 0x02, 0x08, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6d, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x2a, 0x38, 0x0a, 0x10, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x46, 0x65, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x48, 0x49, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x10, 0x01, 0x42, 0x8b,
	0x01, 0x0a, 0x24, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x69, 0x6e, 0x63, 0x2e, 0x66,
	0x6c, 0x69, 0x70, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x67, 0x65, 0x6e, 0x2e, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x5a, 0x52, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x2d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2f, 0x66, 0x6c, 0x69, 0x70, 0x63, 0x68, 0x61, 0x74, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x31,
	0x3b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x70, 0x62, 0xa2, 0x02, 0x0e, 0x46, 0x43,
	0x50, 0x42, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_activity_v1_model_proto_rawDescOnce sync.Once
	file_activity_v1_model_proto_rawDescData = file_activity_v1_model_proto_rawDesc
)

func file_activity_v1_model_proto_rawDescGZIP() []byte {
	file_activity_v1_model_proto_rawDescOnce.Do(func() {
		file_activity_v1_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_activity_v1_model_proto_rawDescData)
	})
	return file_activity_v1_model_proto_rawDescData
}

var file_activity_v1_model_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_activity_v1_model_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_activity_v1_model_proto_goTypes = []any{
	(ActivityFeedType)(0),                           // 0: flipchat.activity.v1.ActivityFeedType
	(*NotificationId)(nil),                          // 1: flipchat.activity.v1.NotificationId
	(*Notification)(nil),                            // 2: flipchat.activity.v1.Notification
	(*WelcomeBonusNotificationMetadata)(nil),        // 3: flipchat.activity.v1.WelcomeBonusNotificationMetadata
	(*WeeklyBonusNotificationMetadata)(nil),         // 4: flipchat.activity.v1.WeeklyBonusNotificationMetadata
	(*CreateGroupNotificationMetadata)(nil),         // 5: flipchat.activity.v1.CreateGroupNotificationMetadata
	(*SendListenerMessageNotificationMetadata)(nil), // 6: flipchat.activity.v1.SendListenerMessageNotificationMetadata
	(*SendTipNotificationMetadata)(nil),             // 7: flipchat.activity.v1.SendTipNotificationMetadata
	(*ReceivedTipNotificationMetadata)(nil),         // 8: flipchat.activity.v1.ReceivedTipNotificationMetadata
	(*PromotedToSpeakerNotificationMetadata)(nil),   // 9: flipchat.activity.v1.PromotedToSpeakerNotificationMetadata
	(*timestamppb.Timestamp)(nil),                   // 10: google.protobuf.Timestamp
	(*v1.ChatId)(nil),                               // 11: flipchat.common.v1.ChatId
	(*v11.MessageId)(nil),                           // 12: flipchat.messaging.v1.MessageId
	(*v1.UserId)(nil),                               // 13: flipchat.common.v1.UserId
}
var file_activity_v1_model_proto_depIdxs = []int32{
	1,  // 0: flipchat.activity.v1.Notification.id:type_name -> flipchat.activity.v1.NotificationId
	10, // 1: flipchat.activity.v1.Notification.ts:type_name -> google.protobuf.Timestamp
	3,  // 2: flipchat.activity.v1.Notification.welcome_bonus:type_name -> flipchat.activity.v1.WelcomeBonusNotificationMetadata
	4,  // 3: flipchat.activity.v1.Notification.weekly_bonus:type_name -> flipchat.activity.v1.WeeklyBonusNotificationMetadata
	5,  // 4: flipchat.activity.v1.Notification.create_group:type_name -> flipchat.activity.v1.CreateGroupNotificationMetadata
	6,  // 5: flipchat.activity.v1.Notification.send_listener_message:type_name -> flipchat.activity.v1.SendListenerMessageNotificationMetadata
	7,  // 6: flipchat.activity.v1.Notification.send_tip:type_name -> flipchat.activity.v1.SendTipNotificationMetadata
	8,  // 7: flipchat.activity.v1.Notification.received_tip:type_name -> flipchat.activity.v1.ReceivedTipNotificationMetadata
	9,  // 8: flipchat.activity.v1.Notification.promoted_to_speaker:type_name -> flipchat.activity.v1.PromotedToSpeakerNotificationMetadata
	11, // 9: flipchat.activity.v1.CreateGroupNotificationMetadata.chat_id:type_name -> flipchat.common.v1.ChatId
	11, // 10: flipchat.activity.v1.SendListenerMessageNotificationMetadata.chat_id:type_name -> flipchat.common.v1.ChatId
	12, // 11: flipchat.activity.v1.SendListenerMessageNotificationMetadata.message_id:type_name -> flipchat.messaging.v1.MessageId
	11, // 12: flipchat.activity.v1.SendTipNotificationMetadata.chat_id:type_name -> flipchat.common.v1.ChatId
	12, // 13: flipchat.activity.v1.SendTipNotificationMetadata.message_id:type_name -> flipchat.messaging.v1.MessageId
	11, // 14: flipchat.activity.v1.ReceivedTipNotificationMetadata.chat_id:type_name -> flipchat.common.v1.ChatId
	12, // 15: flipchat.activity.v1.ReceivedTipNotificationMetadata.message_id:type_name -> flipchat.messaging.v1.MessageId
	11, // 16: flipchat.activity.v1.PromotedToSpeakerNotificationMetadata.chat_id:type_name -> flipchat.common.v1.ChatId
	13, // 17: flipchat.activity.v1.PromotedToSpeakerNotificationMetadata.promted_by:type_name -> flipchat.common.v1.UserId
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_activity_v1_model_proto_init() }
func file_activity_v1_model_proto_init() {
	if File_activity_v1_model_proto != nil {
		return
	}
	file_activity_v1_model_proto_msgTypes[1].OneofWrappers = []any{
		(*Notification_WelcomeBonus)(nil),
		(*Notification_WeeklyBonus)(nil),
		(*Notification_CreateGroup)(nil),
		(*Notification_SendListenerMessage)(nil),
		(*Notification_SendTip)(nil),
		(*Notification_ReceivedTip)(nil),
		(*Notification_PromotedToSpeaker)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_activity_v1_model_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_activity_v1_model_proto_goTypes,
		DependencyIndexes: file_activity_v1_model_proto_depIdxs,
		EnumInfos:         file_activity_v1_model_proto_enumTypes,
		MessageInfos:      file_activity_v1_model_proto_msgTypes,
	}.Build()
	File_activity_v1_model_proto = out.File
	file_activity_v1_model_proto_rawDesc = nil
	file_activity_v1_model_proto_goTypes = nil
	file_activity_v1_model_proto_depIdxs = nil
}
