// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.21.12
// source: preview/v1/model.proto

package previewpb

import (
	v1 "github.com/code-payments/flipchat-protobuf-api/generated/go/common/v1"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PreviewUrl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID for the preview url, can be used instead of the URL within chat messages.
	PreviewId *v1.PreviewId `protobuf:"bytes,1,opt,name=preview_id,json=previewId,proto3" json:"preview_id,omitempty"`
	// The URL of the preview, we may put the original URL behind a short URL or
	// add anlalytics.
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	// A title pulled from the URL, either a meta tag, title tag, or the first
	// h1/h2 tag, falling back to the domain name.
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	// A description pulled from the URL, either a meta tag, description tag, or
	// the first p tag.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// An image pulled from the URL, either a meta tag, og:image tag, or the first
	// img tag, falling back to a generic image based on the content type.
	Image *PreviewImage `protobuf:"bytes,5,opt,name=image,proto3" json:"image,omitempty"`
	// The content type of the URL, derived from the Content-Type header.
	ContentType v1.ContentType `protobuf:"varint,6,opt,name=content_type,json=contentType,proto3,enum=flipchat.common.v1.ContentType" json:"content_type,omitempty"`
	// The moderation status of the URL.
	ModerationStatus v1.ModerationStatus `protobuf:"varint,7,opt,name=moderation_status,json=moderationStatus,proto3,enum=flipchat.common.v1.ModerationStatus" json:"moderation_status,omitempty"`
	// Timestamp this preview was generated at.
	Ts *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=ts,proto3" json:"ts,omitempty"`
}

func (x *PreviewUrl) Reset() {
	*x = PreviewUrl{}
	mi := &file_preview_v1_model_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PreviewUrl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreviewUrl) ProtoMessage() {}

func (x *PreviewUrl) ProtoReflect() protoreflect.Message {
	mi := &file_preview_v1_model_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreviewUrl.ProtoReflect.Descriptor instead.
func (*PreviewUrl) Descriptor() ([]byte, []int) {
	return file_preview_v1_model_proto_rawDescGZIP(), []int{0}
}

func (x *PreviewUrl) GetPreviewId() *v1.PreviewId {
	if x != nil {
		return x.PreviewId
	}
	return nil
}

func (x *PreviewUrl) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *PreviewUrl) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PreviewUrl) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PreviewUrl) GetImage() *PreviewImage {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *PreviewUrl) GetContentType() v1.ContentType {
	if x != nil {
		return x.ContentType
	}
	return v1.ContentType(0)
}

func (x *PreviewUrl) GetModerationStatus() v1.ModerationStatus {
	if x != nil {
		return x.ModerationStatus
	}
	return v1.ModerationStatus(0)
}

func (x *PreviewUrl) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

type PreviewImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The URL of the preview image for the URL.
	ImageUrl string `protobuf:"bytes,1,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	// A blurhash of the image.
	ImageHash string `protobuf:"bytes,2,opt,name=image_hash,json=imageHash,proto3" json:"image_hash,omitempty"`
	Width     int32  `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Height    int32  `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *PreviewImage) Reset() {
	*x = PreviewImage{}
	mi := &file_preview_v1_model_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PreviewImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreviewImage) ProtoMessage() {}

func (x *PreviewImage) ProtoReflect() protoreflect.Message {
	mi := &file_preview_v1_model_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreviewImage.ProtoReflect.Descriptor instead.
func (*PreviewImage) Descriptor() ([]byte, []int) {
	return file_preview_v1_model_proto_rawDescGZIP(), []int{1}
}

func (x *PreviewImage) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *PreviewImage) GetImageHash() string {
	if x != nil {
		return x.ImageHash
	}
	return ""
}

func (x *PreviewImage) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *PreviewImage) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

var File_preview_v1_model_proto protoreflect.FileDescriptor

var file_preview_v1_model_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x66, 0x6c, 0x69, 0x70, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x1a, 0x16, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xc8, 0x03, 0x0a, 0x0a, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x55, 0x72, 0x6c, 0x12, 0x46,
	0x0a, 0x0a, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49,
	0x64, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x09, 0x70, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0x80, 0x10, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xff, 0x01, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07,
	0x72, 0x05, 0x10, 0x01, 0x18, 0x80, 0x04, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x70,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x42, 0x0a,
	0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x51, 0x0a, 0x11, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x66,
	0x6c, 0x69, 0x70, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x10, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x34, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0xb2, 0x01, 0x02, 0x08, 0x01, 0x52, 0x02, 0x74, 0x73, 0x22, 0x90, 0x01, 0x0a, 0x0c, 0x50,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x27, 0x0a, 0x09, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a,
	0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0x80, 0x10, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x55, 0x72, 0x6c, 0x12, 0x29, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10,
	0x01, 0x18, 0xff, 0x01, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12,
	0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x42, 0x86, 0x01,
	0x0a, 0x23, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x69, 0x6e, 0x63, 0x2e, 0x66, 0x6c,
	0x69, 0x70, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x67, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x2e, 0x76, 0x31, 0x5a, 0x50, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x2d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f,
	0x66, 0x6c, 0x69, 0x70, 0x63, 0x68, 0x61, 0x74, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f,
	0x67, 0x6f, 0x2f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2f, 0x76, 0x31, 0x3b, 0x70, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x70, 0x62, 0xa2, 0x02, 0x0c, 0x46, 0x50, 0x42, 0x70, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_preview_v1_model_proto_rawDescOnce sync.Once
	file_preview_v1_model_proto_rawDescData = file_preview_v1_model_proto_rawDesc
)

func file_preview_v1_model_proto_rawDescGZIP() []byte {
	file_preview_v1_model_proto_rawDescOnce.Do(func() {
		file_preview_v1_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_preview_v1_model_proto_rawDescData)
	})
	return file_preview_v1_model_proto_rawDescData
}

var file_preview_v1_model_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_preview_v1_model_proto_goTypes = []any{
	(*PreviewUrl)(nil),            // 0: flipchat.preview.v1.PreviewUrl
	(*PreviewImage)(nil),          // 1: flipchat.preview.v1.PreviewImage
	(*v1.PreviewId)(nil),          // 2: flipchat.common.v1.PreviewId
	(v1.ContentType)(0),           // 3: flipchat.common.v1.ContentType
	(v1.ModerationStatus)(0),      // 4: flipchat.common.v1.ModerationStatus
	(*timestamppb.Timestamp)(nil), // 5: google.protobuf.Timestamp
}
var file_preview_v1_model_proto_depIdxs = []int32{
	2, // 0: flipchat.preview.v1.PreviewUrl.preview_id:type_name -> flipchat.common.v1.PreviewId
	1, // 1: flipchat.preview.v1.PreviewUrl.image:type_name -> flipchat.preview.v1.PreviewImage
	3, // 2: flipchat.preview.v1.PreviewUrl.content_type:type_name -> flipchat.common.v1.ContentType
	4, // 3: flipchat.preview.v1.PreviewUrl.moderation_status:type_name -> flipchat.common.v1.ModerationStatus
	5, // 4: flipchat.preview.v1.PreviewUrl.ts:type_name -> google.protobuf.Timestamp
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_preview_v1_model_proto_init() }
func file_preview_v1_model_proto_init() {
	if File_preview_v1_model_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_preview_v1_model_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_preview_v1_model_proto_goTypes,
		DependencyIndexes: file_preview_v1_model_proto_depIdxs,
		MessageInfos:      file_preview_v1_model_proto_msgTypes,
	}.Build()
	File_preview_v1_model_proto = out.File
	file_preview_v1_model_proto_rawDesc = nil
	file_preview_v1_model_proto_goTypes = nil
	file_preview_v1_model_proto_depIdxs = nil
}
