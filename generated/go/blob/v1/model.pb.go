// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.21.12
// source: blob/v1/model.proto

package blobpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BlobType int32

const (
	BlobType_BLOB_TYPE_UNKNOWN BlobType = 0
	BlobType_BLOB_TYPE_IMAGE   BlobType = 1
	BlobType_BLOB_TYPE_VIDEO   BlobType = 2
	BlobType_BLOB_TYPE_AUDIO   BlobType = 3
)

// Enum value maps for BlobType.
var (
	BlobType_name = map[int32]string{
		0: "BLOB_TYPE_UNKNOWN",
		1: "BLOB_TYPE_IMAGE",
		2: "BLOB_TYPE_VIDEO",
		3: "BLOB_TYPE_AUDIO",
	}
	BlobType_value = map[string]int32{
		"BLOB_TYPE_UNKNOWN": 0,
		"BLOB_TYPE_IMAGE":   1,
		"BLOB_TYPE_VIDEO":   2,
		"BLOB_TYPE_AUDIO":   3,
	}
)

func (x BlobType) Enum() *BlobType {
	p := new(BlobType)
	*p = x
	return p
}

func (x BlobType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BlobType) Descriptor() protoreflect.EnumDescriptor {
	return file_blob_v1_model_proto_enumTypes[0].Descriptor()
}

func (BlobType) Type() protoreflect.EnumType {
	return &file_blob_v1_model_proto_enumTypes[0]
}

func (x BlobType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BlobType.Descriptor instead.
func (BlobType) EnumDescriptor() ([]byte, []int) {
	return file_blob_v1_model_proto_rawDescGZIP(), []int{0}
}

type ImageMetadata_Format int32

const (
	ImageMetadata_IMAGE_FORMAT_UNKNOWN ImageMetadata_Format = 0
	ImageMetadata_IMAGE_FORMAT_JPEG    ImageMetadata_Format = 1
	ImageMetadata_IMAGE_FORMAT_PNG     ImageMetadata_Format = 2
	ImageMetadata_IMAGE_FORMAT_GIF     ImageMetadata_Format = 3
	ImageMetadata_IMAGE_FORMAT_WEBP    ImageMetadata_Format = 4
)

// Enum value maps for ImageMetadata_Format.
var (
	ImageMetadata_Format_name = map[int32]string{
		0: "IMAGE_FORMAT_UNKNOWN",
		1: "IMAGE_FORMAT_JPEG",
		2: "IMAGE_FORMAT_PNG",
		3: "IMAGE_FORMAT_GIF",
		4: "IMAGE_FORMAT_WEBP",
	}
	ImageMetadata_Format_value = map[string]int32{
		"IMAGE_FORMAT_UNKNOWN": 0,
		"IMAGE_FORMAT_JPEG":    1,
		"IMAGE_FORMAT_PNG":     2,
		"IMAGE_FORMAT_GIF":     3,
		"IMAGE_FORMAT_WEBP":    4,
	}
)

func (x ImageMetadata_Format) Enum() *ImageMetadata_Format {
	p := new(ImageMetadata_Format)
	*p = x
	return p
}

func (x ImageMetadata_Format) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ImageMetadata_Format) Descriptor() protoreflect.EnumDescriptor {
	return file_blob_v1_model_proto_enumTypes[1].Descriptor()
}

func (ImageMetadata_Format) Type() protoreflect.EnumType {
	return &file_blob_v1_model_proto_enumTypes[1]
}

func (x ImageMetadata_Format) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ImageMetadata_Format.Descriptor instead.
func (ImageMetadata_Format) EnumDescriptor() ([]byte, []int) {
	return file_blob_v1_model_proto_rawDescGZIP(), []int{1, 0}
}

// Common blob info returned in responses
type Blob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlobId    []byte                 `protobuf:"bytes,1,opt,name=blob_id,json=blobId,proto3" json:"blob_id,omitempty"`
	BlobType  BlobType               `protobuf:"varint,2,opt,name=blob_type,json=blobType,proto3,enum=flipchat.blob.v1.BlobType" json:"blob_type,omitempty"`
	OwnerId   string                 `protobuf:"bytes,3,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	S3Url     string                 `protobuf:"bytes,4,opt,name=s3_url,json=s3Url,proto3" json:"s3_url,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Types that are assignable to Metadata:
	//
	//	*Blob_ImageMetadata
	//	*Blob_VideoMetadata
	//	*Blob_AudioMetadata
	Metadata isBlob_Metadata `protobuf_oneof:"metadata"`
}

func (x *Blob) Reset() {
	*x = Blob{}
	mi := &file_blob_v1_model_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Blob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Blob) ProtoMessage() {}

func (x *Blob) ProtoReflect() protoreflect.Message {
	mi := &file_blob_v1_model_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Blob.ProtoReflect.Descriptor instead.
func (*Blob) Descriptor() ([]byte, []int) {
	return file_blob_v1_model_proto_rawDescGZIP(), []int{0}
}

func (x *Blob) GetBlobId() []byte {
	if x != nil {
		return x.BlobId
	}
	return nil
}

func (x *Blob) GetBlobType() BlobType {
	if x != nil {
		return x.BlobType
	}
	return BlobType_BLOB_TYPE_UNKNOWN
}

func (x *Blob) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *Blob) GetS3Url() string {
	if x != nil {
		return x.S3Url
	}
	return ""
}

func (x *Blob) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (m *Blob) GetMetadata() isBlob_Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (x *Blob) GetImageMetadata() *ImageMetadata {
	if x, ok := x.GetMetadata().(*Blob_ImageMetadata); ok {
		return x.ImageMetadata
	}
	return nil
}

func (x *Blob) GetVideoMetadata() *VideoMetadata {
	if x, ok := x.GetMetadata().(*Blob_VideoMetadata); ok {
		return x.VideoMetadata
	}
	return nil
}

func (x *Blob) GetAudioMetadata() *AudioMetadata {
	if x, ok := x.GetMetadata().(*Blob_AudioMetadata); ok {
		return x.AudioMetadata
	}
	return nil
}

type isBlob_Metadata interface {
	isBlob_Metadata()
}

type Blob_ImageMetadata struct {
	ImageMetadata *ImageMetadata `protobuf:"bytes,6,opt,name=image_metadata,json=imageMetadata,proto3,oneof"`
}

type Blob_VideoMetadata struct {
	VideoMetadata *VideoMetadata `protobuf:"bytes,7,opt,name=video_metadata,json=videoMetadata,proto3,oneof"`
}

type Blob_AudioMetadata struct {
	AudioMetadata *AudioMetadata `protobuf:"bytes,8,opt,name=audio_metadata,json=audioMetadata,proto3,oneof"`
}

func (*Blob_ImageMetadata) isBlob_Metadata() {}

func (*Blob_VideoMetadata) isBlob_Metadata() {}

func (*Blob_AudioMetadata) isBlob_Metadata() {}

type ImageMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version int32                `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Width   int32                `protobuf:"varint,2,opt,name=width,proto3" json:"width,omitempty"`
	Height  int32                `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	Format  ImageMetadata_Format `protobuf:"varint,4,opt,name=format,proto3,enum=flipchat.blob.v1.ImageMetadata_Format" json:"format,omitempty"`
}

func (x *ImageMetadata) Reset() {
	*x = ImageMetadata{}
	mi := &file_blob_v1_model_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageMetadata) ProtoMessage() {}

func (x *ImageMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_blob_v1_model_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageMetadata.ProtoReflect.Descriptor instead.
func (*ImageMetadata) Descriptor() ([]byte, []int) {
	return file_blob_v1_model_proto_rawDescGZIP(), []int{1}
}

func (x *ImageMetadata) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ImageMetadata) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *ImageMetadata) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *ImageMetadata) GetFormat() ImageMetadata_Format {
	if x != nil {
		return x.Format
	}
	return ImageMetadata_IMAGE_FORMAT_UNKNOWN
}

type VideoMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version         int32   `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Width           int32   `protobuf:"varint,2,opt,name=width,proto3" json:"width,omitempty"`
	Height          int32   `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	DurationSeconds int32   `protobuf:"varint,4,opt,name=duration_seconds,json=durationSeconds,proto3" json:"duration_seconds,omitempty"`
	FrameRate       float32 `protobuf:"fixed32,5,opt,name=frame_rate,json=frameRate,proto3" json:"frame_rate,omitempty"`
	Codec           string  `protobuf:"bytes,6,opt,name=codec,proto3" json:"codec,omitempty"`
}

func (x *VideoMetadata) Reset() {
	*x = VideoMetadata{}
	mi := &file_blob_v1_model_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VideoMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoMetadata) ProtoMessage() {}

func (x *VideoMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_blob_v1_model_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoMetadata.ProtoReflect.Descriptor instead.
func (*VideoMetadata) Descriptor() ([]byte, []int) {
	return file_blob_v1_model_proto_rawDescGZIP(), []int{2}
}

func (x *VideoMetadata) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *VideoMetadata) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *VideoMetadata) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *VideoMetadata) GetDurationSeconds() int32 {
	if x != nil {
		return x.DurationSeconds
	}
	return 0
}

func (x *VideoMetadata) GetFrameRate() float32 {
	if x != nil {
		return x.FrameRate
	}
	return 0
}

func (x *VideoMetadata) GetCodec() string {
	if x != nil {
		return x.Codec
	}
	return ""
}

type AudioMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version         int32  `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	DurationSeconds int32  `protobuf:"varint,2,opt,name=duration_seconds,json=durationSeconds,proto3" json:"duration_seconds,omitempty"`
	Codec           string `protobuf:"bytes,3,opt,name=codec,proto3" json:"codec,omitempty"`
}

func (x *AudioMetadata) Reset() {
	*x = AudioMetadata{}
	mi := &file_blob_v1_model_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AudioMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioMetadata) ProtoMessage() {}

func (x *AudioMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_blob_v1_model_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioMetadata.ProtoReflect.Descriptor instead.
func (*AudioMetadata) Descriptor() ([]byte, []int) {
	return file_blob_v1_model_proto_rawDescGZIP(), []int{3}
}

func (x *AudioMetadata) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *AudioMetadata) GetDurationSeconds() int32 {
	if x != nil {
		return x.DurationSeconds
	}
	return 0
}

func (x *AudioMetadata) GetCodec() string {
	if x != nil {
		return x.Codec
	}
	return ""
}

var File_blob_v1_model_proto protoreflect.FileDescriptor

var file_blob_v1_model_proto_rawDesc = []byte{
	0x0a, 0x13, 0x62, 0x6c, 0x6f, 0x62, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x66, 0x6c, 0x69, 0x70, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x62, 0x6c, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaf, 0x03, 0x0a, 0x04, 0x42, 0x6c, 0x6f,
	0x62, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x09, 0x62, 0x6c,
	0x6f, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e,
	0x66, 0x6c, 0x69, 0x70, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x62, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x15,
	0x0a, 0x06, 0x73, 0x33, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x33, 0x55, 0x72, 0x6c, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x48, 0x0a, 0x0e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0d, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x48, 0x0a, 0x0e, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x62, 0x6c,
	0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0d, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x48, 0x0a, 0x0e, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66,
	0x6c, 0x69, 0x70, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x75, 0x64, 0x69, 0x6f, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52,
	0x0d, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0a,
	0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x95, 0x02, 0x0a, 0x0d, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x3e, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x62, 0x6c, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x06, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x22, 0x7c, 0x0a, 0x06, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x18,
	0x0a, 0x14, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x4d, 0x41, 0x47,
	0x45, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x4a, 0x50, 0x45, 0x47, 0x10, 0x01, 0x12,
	0x14, 0x0a, 0x10, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f,
	0x50, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x46,
	0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x47, 0x49, 0x46, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x49,
	0x4d, 0x41, 0x47, 0x45, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x57, 0x45, 0x42, 0x50,
	0x10, 0x04, 0x22, 0xb7, 0x01, 0x0a, 0x0d, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x29, 0x0a, 0x10,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x66, 0x72, 0x61,
	0x6d, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x22, 0x6a, 0x0a, 0x0d,
	0x41, 0x75, 0x64, 0x69, 0x6f, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x2a, 0x60, 0x0a, 0x08, 0x42, 0x6c, 0x6f, 0x62,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x42, 0x4c, 0x4f, 0x42, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x42,
	0x4c, 0x4f, 0x42, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x10, 0x01,
	0x12, 0x13, 0x0a, 0x0f, 0x42, 0x4c, 0x4f, 0x42, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x56, 0x49,
	0x44, 0x45, 0x4f, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x42, 0x4c, 0x4f, 0x42, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x41, 0x55, 0x44, 0x49, 0x4f, 0x10, 0x03, 0x42, 0x7b, 0x0a, 0x20, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x69, 0x6e, 0x63, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x67, 0x65, 0x6e, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x5a, 0x4a,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x2d,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x66, 0x6c, 0x69, 0x70, 0x63, 0x68, 0x61,
	0x74, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x67, 0x6f, 0x2f, 0x62, 0x6c, 0x6f, 0x62,
	0x2f, 0x76, 0x31, 0x3b, 0x62, 0x6c, 0x6f, 0x62, 0x70, 0x62, 0xa2, 0x02, 0x0a, 0x46, 0x43, 0x50,
	0x42, 0x42, 0x6c, 0x6f, 0x62, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_blob_v1_model_proto_rawDescOnce sync.Once
	file_blob_v1_model_proto_rawDescData = file_blob_v1_model_proto_rawDesc
)

func file_blob_v1_model_proto_rawDescGZIP() []byte {
	file_blob_v1_model_proto_rawDescOnce.Do(func() {
		file_blob_v1_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_blob_v1_model_proto_rawDescData)
	})
	return file_blob_v1_model_proto_rawDescData
}

var file_blob_v1_model_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_blob_v1_model_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_blob_v1_model_proto_goTypes = []any{
	(BlobType)(0),                 // 0: flipchat.blob.v1.BlobType
	(ImageMetadata_Format)(0),     // 1: flipchat.blob.v1.ImageMetadata.Format
	(*Blob)(nil),                  // 2: flipchat.blob.v1.Blob
	(*ImageMetadata)(nil),         // 3: flipchat.blob.v1.ImageMetadata
	(*VideoMetadata)(nil),         // 4: flipchat.blob.v1.VideoMetadata
	(*AudioMetadata)(nil),         // 5: flipchat.blob.v1.AudioMetadata
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
}
var file_blob_v1_model_proto_depIdxs = []int32{
	0, // 0: flipchat.blob.v1.Blob.blob_type:type_name -> flipchat.blob.v1.BlobType
	6, // 1: flipchat.blob.v1.Blob.created_at:type_name -> google.protobuf.Timestamp
	3, // 2: flipchat.blob.v1.Blob.image_metadata:type_name -> flipchat.blob.v1.ImageMetadata
	4, // 3: flipchat.blob.v1.Blob.video_metadata:type_name -> flipchat.blob.v1.VideoMetadata
	5, // 4: flipchat.blob.v1.Blob.audio_metadata:type_name -> flipchat.blob.v1.AudioMetadata
	1, // 5: flipchat.blob.v1.ImageMetadata.format:type_name -> flipchat.blob.v1.ImageMetadata.Format
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_blob_v1_model_proto_init() }
func file_blob_v1_model_proto_init() {
	if File_blob_v1_model_proto != nil {
		return
	}
	file_blob_v1_model_proto_msgTypes[0].OneofWrappers = []any{
		(*Blob_ImageMetadata)(nil),
		(*Blob_VideoMetadata)(nil),
		(*Blob_AudioMetadata)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_blob_v1_model_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_blob_v1_model_proto_goTypes,
		DependencyIndexes: file_blob_v1_model_proto_depIdxs,
		EnumInfos:         file_blob_v1_model_proto_enumTypes,
		MessageInfos:      file_blob_v1_model_proto_msgTypes,
	}.Build()
	File_blob_v1_model_proto = out.File
	file_blob_v1_model_proto_rawDesc = nil
	file_blob_v1_model_proto_goTypes = nil
	file_blob_v1_model_proto_depIdxs = nil
}
